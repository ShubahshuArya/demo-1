name: Migrate Repository and Secrets

on:
  workflow_dispatch:  # Trigger manually

jobs:
  migrate:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up GitHub authentication (using GITHUB_TOKEN for the current repo)
      - name: Set up authentication for GitHub API
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET }}
        run: |
          echo "GITHUB_TOKEN=$GITHUB_TOKEN" >> $GITHUB_ENV

      # Step 2: Fetch the encryption public key from the source repository
      - name: Get public key for encryption from source repository
        run: |
          source_repo="ShubahshuArya/demo-1"
          api_url="https://api.github.com/repos/${source_repo}/actions/secrets/public-key"
          
          # Get the public key from GitHub API
          public_key_response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $api_url)
          key_id=$(echo "$public_key_response" | jq -r '.key_id')
          public_key=$(echo "$public_key_response" | jq -r '.key')

          echo "key_id=$key_id" >> $GITHUB_ENV
          echo "public_key=$public_key" >> $GITHUB_ENV

      # Step 3: Fetch secrets from the source repository
      - name: Fetch secrets from source repository
        run: |
          source_repo="ShubahshuArya/demo-1"
          target_repo="ShubahshuArya/demo-2"
          api_url="https://api.github.com/repos/${source_repo}/actions/secrets"
          secrets_list=$(curl -s -H "Authorization: token $GITHUB_TOKEN" $api_url)
          echo "$secrets_list" > secrets.json

      # Step 4: Encrypt secrets and create them in the target repository
      - name: Encrypt and create secrets in target repository
        run: |
          target_repo="ShubahshuArya/demo-2"
          api_url="https://api.github.com/repos/${target_repo}/actions/secrets"

          # Loop through each secret from source and encrypt it using the public key
          for secret in $(jq -r '.secrets[].name' secrets.json); do
            secret_value=$(jq -r ".secrets[] | select(.name==\"$secret\") | .value" secrets.json)

            # Encrypt the secret value using the public key and key_id with pkeyutl
            echo -n "$secret_value" | openssl pkeyutl -encrypt -inkey <(echo "$public_key" | base64 --decode) -pubin | base64 > encrypted_secret.txt

            # Read the encrypted value from the file
            encrypted_value=$(cat encrypted_secret.txt)

            # Create secret in the target repository
            curl -X PUT -H "Authorization: token $GITHUB_TOKEN" \
              -d "{\"encrypted_value\":\"$encrypted_value\", \"key_id\":\"$key_id\"}" \
              $api_url/$secret
            echo "Secret $secret created in $target_repo"
          done

      # Step 5: Migrate environment variables manually (not dynamic, specify them explicitly)
      - name: Migrate environment variables manually
        run: |
          # Example of manually migrating environment variables (as secrets or directly)
          echo "VAR1=${{ secrets.VAR1 }}" >> $GITHUB_ENV
          echo "VAR2=${{ secrets.VAR2 }}" >> $GITHUB_ENV

          # Example of passing other environment variables directly (not as secrets):
          echo "MY_ENV_VAR=some_value" >> $GITHUB_ENV
          echo "Migrating environment variables"
